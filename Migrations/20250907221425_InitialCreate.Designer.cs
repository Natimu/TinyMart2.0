// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TinyMartAPI.Data;

#nullable disable

namespace TinyMartAPI.Migrations
{
    [DbContext(typeof(TinyMartDbContext))]
    [Migration("20250907221425_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("TinyMartAPI.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("CartId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TinyMartAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CartId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<float>("ReviewRate")
                        .HasColumnType("REAL");

                    b.HasKey("ProductID");

                    b.HasIndex("CartId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("ProductType").HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TinyMartAPI.Models.AudioProduct", b =>
                {
                    b.HasBaseType("TinyMartAPI.Models.Product");

                    b.Property<int>("Genre")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Audio");
                });

            modelBuilder.Entity("TinyMartAPI.Models.EBook", b =>
                {
                    b.HasBaseType("TinyMartAPI.Models.Product");

                    b.Property<int>("Pages")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("EBook");
                });

            modelBuilder.Entity("TinyMartAPI.Models.PaperBook", b =>
                {
                    b.HasBaseType("TinyMartAPI.Models.Product");

                    b.Property<int>("Pages")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("PaperBook");
                });

            modelBuilder.Entity("TinyMartAPI.Models.VideoProduct", b =>
                {
                    b.HasBaseType("TinyMartAPI.Models.Product");

                    b.Property<int>("FilmRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RunTime")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("TinyMartAPI.Models.Cart", b =>
                {
                    b.OwnsOne("TinyMartAPI.Models.NameType", "Owner", b1 =>
                        {
                            b1.Property<int>("CartId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("CartId");

                            b1.ToTable("Carts");

                            b1.WithOwner()
                                .HasForeignKey("CartId");
                        });

                    b.Navigation("Owner")
                        .IsRequired();
                });

            modelBuilder.Entity("TinyMartAPI.Models.Product", b =>
                {
                    b.HasOne("TinyMartAPI.Models.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TinyMartAPI.Models.AudioProduct", b =>
                {
                    b.OwnsOne("TinyMartAPI.Models.NameType", "Singer", b1 =>
                        {
                            b1.Property<int>("AudioProductProductID")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("AudioProductProductID");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("AudioProductProductID");
                        });

                    b.Navigation("Singer")
                        .IsRequired();
                });

            modelBuilder.Entity("TinyMartAPI.Models.EBook", b =>
                {
                    b.OwnsOne("TinyMartAPI.Models.NameType", "Author", b1 =>
                        {
                            b1.Property<int>("EBookProductID")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT");

                            b1.HasKey("EBookProductID");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("EBookProductID");
                        });

                    b.Navigation("Author")
                        .IsRequired();
                });

            modelBuilder.Entity("TinyMartAPI.Models.PaperBook", b =>
                {
                    b.OwnsOne("TinyMartAPI.Models.NameType", "Author", b1 =>
                        {
                            b1.Property<int>("PaperBookProductID")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("TEXT");

                            b1.HasKey("PaperBookProductID");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("PaperBookProductID");
                        });

                    b.Navigation("Author")
                        .IsRequired();
                });

            modelBuilder.Entity("TinyMartAPI.Models.VideoProduct", b =>
                {
                    b.OwnsOne("TinyMartAPI.Models.NameType", "Director", b1 =>
                        {
                            b1.Property<int>("VideoProductProductID")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("VideoProductProductID");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("VideoProductProductID");
                        });

                    b.Navigation("Director")
                        .IsRequired();
                });

            modelBuilder.Entity("TinyMartAPI.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
